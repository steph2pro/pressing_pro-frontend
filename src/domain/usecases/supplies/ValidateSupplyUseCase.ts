import toast from "react-hot-toast";
import SupplyApi from "../../../data/datasources/SupplyApi";
import { Approvisionnement } from "../../../data/models";

export const validateSupplyUseCase = async (
  id: number,
  supplyApi: SupplyApi
): Promise<Approvisionnement> => {
  try {
    if (!id || id <= 0) {
      throw new Error("ID d'approvisionnement invalide");
    }

    // RÃ©cupÃ©rer l'approvisionnement pour vÃ©rification
    const supply = await supplyApi.getSupplyById(id);
    
    // VÃ©rifications prÃ©alables
    if (supply.statut === 'validated') {
      throw new Error("Cet approvisionnement est dÃ©jÃ  validÃ©");
    }
    
    if (supply.lignes.length === 0) {
      throw new Error("Impossible de valider un approvisionnement sans lignes");
    }
    
    // Mettre Ã  jour le statut
    const updatedSupply = await supplyApi.updateSupply(id, { statut: 'validated' });
    
    // Mettre Ã  jour les stocks (serait fait cÃ´tÃ© backend en rÃ©alitÃ©)
    console.log("ðŸ“¦ Mise Ã  jour des stocks aprÃ¨s validation...");
    
    toast.success("âœ… Approvisionnement validÃ© avec succÃ¨s ! Les stocks ont Ã©tÃ© mis Ã  jour.");
    
    return updatedSupply;
  } catch (error: any) {
    console.error(`Erreur lors de la validation de l'approvisionnement #${id} :`, error);
    const message = error?.message || error?.response?.data?.error || "Erreur lors de la validation de l'approvisionnement";
    toast.error(message);
    throw error;
  }
};